java.lang.StringBuffer.StringBuffer;3
java.util.zip.ZipFile.getEntry;1
java.util.zip.ZipOutputStream.close;1
java.util.Map.putAll;2
java.sql.Connection.close;1
java.io.FileOutputStream.write;1
java.util.List.add;3
java.sql.ResultSet.next;1
java.util.Iterator.hasNext;7
src.com.aaspring.translation.LocaleItem:public java.lang.String getKey() ;2
java.util.Hashtable.remove;1
java.sql.Connection.createStatement;2
java.util.Hashtable.put;1
java.sql.ResultSet.close;1
java.lang.String.equals;8
src.com.aaspring.util.file.FileAccessorContainer:public Map<src.com.aaspring.util.file.FileAccessorProperties,java.io.InputStream> getInputStreams() throws java.io.IOException;1
src.org.apache.avalon.cornerstone.blocks.security.realms.test.AbstractUsernamePasswordAllTestCase.AbstractUsernamePasswordAllTestCase;1
java.lang.String.valueOf;3
java.util.Vector.addElement;1
src.com.aaspring.translation.LocaleItem:public Map<java.util.Locale,java.lang.String> getValues() ;2
java.util.Locale.hashCode;1
java.util.Locale.getLanguage;2
java.util.zip.ZipEntry.isDirectory;1
java.lang.String.endsWith;1
java.lang.String.hashCode;4
java.util.Set.add;2
src.com.aaspring.util.file.FileAccessorProperties:public java.lang.String getType() ;1
java.sql.Connection.prepareStatement;1
java.util.zip.ZipFile.close;2
java.util.Map.get;15
java.io.File.File;5
java.util.Map.equals;1
src.com.aaspring.util.file.AbstractFileAccessor:public Map<src.com.aaspring.util.file.FileAccessorProperties,java.io.OutputStream> getOutputStreams() ;1
java.lang.RuntimeException.RuntimeException;2
src.com.aaspring.util.file.AbstractFileAccessor:public Map<src.com.aaspring.util.file.FileAccessorProperties,java.io.InputStream> getInputStreams() throws java.io.IOException;2
java.util.HashMap.get;2
java.util.Locale.equals;1
java.lang.String.split;1
java.util.Locale.toString;1
java.util.Collections.unmodifiableMap;5
java.io.File.length;1
java.io.FileOutputStream.FileOutputStream;4
java.util.Enumeration.hasMoreElements;3
src.com.aaspring.util.file.FileAccessorProperties:public Map<java.lang.String,java.lang.String> getAttributes() ;1
java.sql.Statement.close;1
java.util.Date.Date;1
java.lang.Class.newInstance;3
java.sql.Statement.executeUpdate;1
java.util.Map.containsKey;2
java.io.OutputStream.write;1
java.util.Map.hashCode;1
java.util.Iterator.next;7
java.util.Map.put;11
java.io.BufferedReader.readLine;1
java.util.Map.remove;1
src.org.apache.avalon.cornerstone.blocks.security.realms.AbstractPrincipal:public java.lang.String getName() ;1
java.util.zip.ZipOutputStream.ZipOutputStream;1
src.org.apache.avalon.cornerstone.blocks.security.realms.AbstractPrincipal.AbstractPrincipal;3
java.util.ArrayList.ArrayList;6
java.util.List.indexOf;2
java.util.HashMap.put;1
java.sql.DriverManager.getConnection;1
src.com.aaspring.util.file.ZipFileEntryAccessor.ZipPathData:private void <init>() ;1
src.org.apache.avalon.cornerstone.blocks.security.realms.test.CatalinaMemoryRealmTestCase:protected java.security.Principal getPrincipal() ;1
src.org.apache.avalon.cornerstone.blocks.security.realms.test.AbstractUsernamePasswordGroupTestCase.AbstractUsernamePasswordGroupTestCase;1
java.io.FileOutputStream.close;1
java.io.File.listFiles;3
src.org.apache.avalon.cornerstone.blocks.security.realms.AttributePrincipal:public java.lang.String getValue() ;1
java.io.Closeable.close;1
src.org.apache.avalon.cornerstone.blocks.security.realms.test.AbstractUsernamePasswordBaseTestCase.AbstractUsernamePasswordBaseTestCase;3
src.com.aaspring.util.file.AbstractFileAccessor:protected abstract Map<src.com.aaspring.util.file.FileAccessorProperties,java.io.OutputStream> getOutputStreamsImpl(Set<src.com.aaspring.util.file.FileAccessorProperties>) ;1
java.util.Collection.add;4
java.io.File.getName;1
java.io.InputStream.available;1
java.util.zip.ZipFile.getInputStream;2
java.lang.StringBuffer.toString;2
java.util.Date.getTime;1
java.lang.Exception.Exception;3
java.sql.PreparedStatement.addBatch;1
java.io.BufferedReader.BufferedReader;1
java.lang.Class.getResourceAsStream;1
java.util.Locale.getDisplayName;1
java.sql.PreparedStatement.setString;1
src.org.apache.avalon.cornerstone.blocks.security.realms.test.AbstractRealmTestCase:protected abstract java.security.Principal getPrincipal() ;1
java.lang.StringBuilder.StringBuilder;3
java.util.Map.values;6
java.util.List.toArray;1
java.util.Locale.Locale;2
java.util.Locale.getVariant;2
java.util.Set.contains;1
src.org.apache.avalon.cornerstone.blocks.security.realms.test.AbstractRealmTestCase.AbstractRealmTestCase;1
java.lang.Object.getClass;4
java.lang.String.startsWith;1
java.lang.Class.getName;4
src.com.aaspring.util.file.FileAccessorUtil:public static java.lang.String getFilePath(java.lang.String, java.lang.String, java.util.Locale) ;4
java.util.zip.ZipFile.entries;1
src.com.aaspring.translation.Exporter:private java.util.Locale[] getLocaleWithParents(java.util.Locale) ;1
java.sql.Statement.executeBatch;1
java.util.LinkedHashMap.LinkedHashMap;11
src.com.aaspring.util.file.AbstractFileAccessor:protected abstract Map<src.com.aaspring.util.file.FileAccessorProperties,java.io.InputStream> getInputStreamsImpl(Set<src.com.aaspring.util.file.FileAccessorProperties>) ;1
src.com.aaspring.util.file.FileAccessorProperties:public java.util.Locale getLocale() ;1
java.lang.StringBuilder.toString;3
java.lang.Object.toString;1
java.util.Collection.contains;3
java.util.zip.ZipFile.ZipFile;2
java.io.OutputStream.close;1
java.util.Map.keySet;4
src.com.neilmix.narrativejs.CompilerMain.IProxy:void <init>() ;1
java.lang.Class.forName;4
java.util.Arrays.equals;1
java.lang.String.String;1
java.sql.Connection.setAutoCommit;1
java.io.File.getParentFile;3
java.security.Principal.getName;4
java.io.File.mkdirs;3
java.lang.IllegalStateException.IllegalStateException;3
java.io.File.delete;1
src.com.aaspring.translation.Exporter:public void <init>() ;1
java.io.InputStreamReader.InputStreamReader;1
java.util.Enumeration.nextElement;3
java.util.Properties.setProperty;2
java.security.InvalidParameterException.InvalidParameterException;2
java.util.Locale.getCountry;2
java.util.List.size;3
java.util.Properties.store;1
java.io.File.getCanonicalPath;1
java.io.File.exists;1
java.util.Collections.unmodifiableSet;1
java.util.List.get;1
java.lang.String.getBytes;2
java.io.File.isDirectory;2
java.util.Properties.getProperty;3
java.lang.IllegalArgumentException.IllegalArgumentException;1
java.util.zip.ZipEntry.getName;1
java.util.Set.iterator;2
java.lang.Math.abs;1
java.util.Collection.iterator;2
java.io.InputStream.read;1
java.lang.Throwable.printStackTrace;8
java.util.LinkedHashSet.LinkedHashSet;1
java.lang.StringBuffer.append;3
src.com.aaspring.util.file.FileAccessorProperties:public void <init>(Map<java.lang.String,java.lang.String>, java.lang.String, java.util.Locale) ;2
java.lang.Object.Object;3
java.lang.System.arraycopy;1
java.lang.StringBuilder.append;3
java.io.FileInputStream.FileInputStream;1
java.util.Hashtable.get;1
java.sql.ResultSet.getString;1
totalDocNum:101